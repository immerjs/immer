"use strict";(self.webpackChunkimmer_website=self.webpackChunkimmer_website||[]).push([[798],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>g});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),m=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},c=function(e){var n=m(e.components);return r.createElement(i.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=m(t),p=a,g=l["".concat(i,".").concat(p)]||l[p]||u[p]||o;return t?r.createElement(g,d(d({ref:n},c),{},{components:t})):r.createElement(g,d({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,d=new Array(o);d[0]=p;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[l]="string"==typeof e?e:a,d[1]=s;for(var m=2;m<o;m++)d[m]=t[m];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9297:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>m,toc:()=>l});var r=t(8168),a=t(8587),o=(t(6540),t(5680)),d=["components"],s={id:"example-setstate",title:"React & Immer"},i=void 0,m={unversionedId:"example-setstate",id:"example-setstate",title:"React & Immer",description:"<div",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/example-setstate.mdx",sourceDirName:".",slug:"/example-setstate",permalink:"/immer/zh-CN/example-setstate",draft:!1,editUrl:"https://github.com/immerjs/immer/edit/main/website/docs/example-setstate.mdx",tags:[],version:"current",frontMatter:{id:"example-setstate",title:"React & Immer"},sidebar:"Immer",previous:{title:"\u67ef\u91cc\u5316 producers",permalink:"/immer/zh-CN/curried-produce"},next:{title:"\u66f4\u65b0\u6a21\u5f0f",permalink:"/immer/zh-CN/update-patterns"}},c={},l=[{value:"useState + Immer",id:"usestate--immer",level:2},{value:"useImmer",id:"useimmer",level:2},{value:"useReducer + Immer",id:"usereducer--immer",level:2},{value:"useImmerReducer",id:"useimmerreducer",level:2},{value:"Redux + Immer",id:"redux--immer",level:2}],u={toc:l};function p(e){var n=e.components,t=(0,a.A)(e,d);return(0,o.yg)("wrapper",(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("center",null,(0,o.yg)("div",{"data-ea-publisher":"immerjs","data-ea-type":"image",className:"horizontal bordered"}))," ",(0,o.yg)("details",null,(0,o.yg)("summary",{className:"egghead-summary"},"egghead.io \u7b2c\u516b\u8bfe: \u4f7f\u7528 Immer \u548c useState\uff0c\u6216\u8005 useImmer\u3002"),(0,o.yg)("br",null),(0,o.yg)("div",null,(0,o.yg)("iframe",{width:"760",height:"427",scrolling:"no",src:"https://egghead.io/lessons/react-immutable-update-state-inside-react-components-with-useimmer/embed"})),(0,o.yg)("a",{className:"egghead-link",href:"https://egghead.io/lessons/react-immutable-update-state-inside-react-components-with-useimmer"},"Hosted on egghead.io")),(0,o.yg)("h2",{id:"usestate--immer"},"useState + Immer"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"useState")," hook \u5047\u5b9a\u5b58\u50a8\u5728\u5176\u4e2d\u7684\u4efb\u4f55 state \u90fd\u88ab\u89c6\u4e3a\u4e0d\u53ef\u53d8\u7684\u3002\u4f7f\u7528 Immer \u53ef\u4ee5\u5927\u5927\u7b80\u5316 React \u7ec4\u4ef6\u72b6\u6001\u7684\u6df1\u5ea6\u66f4\u65b0\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 ",(0,o.yg)("inlineCode",{parentName:"p"},"produce")," \u548c ",(0,o.yg)("inlineCode",{parentName:"p"},"useState")," \uff0c\u53ef\u4ee5\u5728 ",(0,o.yg)("a",{parentName:"p",href:"https://codesandbox.io/s/immer-usestate-ujkgg?file=/src/index.js"},"CodeSandbox")," \u8bd5\u8bd5\u3002"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},'import React, { useCallback, useState } from "react";\nimport {produce} from "immer";\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: "React",\n      title: "Learn React",\n      done: true\n    },\n    {\n      id: "Immer",\n      title: "Try Immer",\n      done: false\n    }\n  ]);\n\n  const handleToggle = useCallback((id) => {\n    setTodos(\n      produce((draft) => {\n        const todo = draft.find((todo) => todo.id === id);\n        todo.done = !todo.done;\n      })\n    );\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    setTodos(\n      produce((draft) => {\n        draft.push({\n          id: "todo_" + Math.random(),\n          title: "A new todo",\n          done: false\n        });\n      })\n    );\n  }, []);\n\n  return (<div>{*/ See CodeSandbox */}</div>)\n}\n')),(0,o.yg)("h2",{id:"useimmer"},"useImmer"),(0,o.yg)("p",null,"\u7531\u4e8e\u6240\u6709 state \u7684\u66f4\u65b0\u90fd\u4f7f\u7528 ",(0,o.yg)("inlineCode",{parentName:"p"},"produce")," \u5305\u88c5\u7684\u66f4\u65b0\u6a21\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u66f4\u65b0\u6a21\u5f0f\u5305\u88c5\u5728 ",(0,o.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/use-immer"},"use-immer")," \u5305\u4e2d\u6765\u7b80\u5316\u4e0a\u8ff0\u64cd\u4f5c"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},'import React, { useCallback } from "react";\nimport { useImmer } from "use-immer";\n\nconst TodoList = () => {\n  const [todos, setTodos] = useImmer([\n    {\n      id: "React",\n      title: "Learn React",\n      done: true\n    },\n    {\n      id: "Immer",\n      title: "Try Immer",\n      done: false\n    }\n  ]);\n\n  const handleToggle = useCallback((id) => {\n    setTodos((draft) => {\n      const todo = draft.find((todo) => todo.id === id);\n      todo.done = !todo.done;\n    });\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    setTodos((draft) => {\n      draft.push({\n        id: "todo_" + Math.random(),\n        title: "A new todo",\n        done: false\n      });\n    });\n  }, []);\n\n  // etc\n')),(0,o.yg)("p",null,"\u5b8c\u6574\u7684 demo \u8bf7\u53c2\u9605 ",(0,o.yg)("a",{parentName:"p",href:"https://codesandbox.io/s/use-immer-bvd5v?file=/src/index.js"},"CodeSandbox")),(0,o.yg)("h2",{id:"usereducer--immer"},"useReducer + Immer"),(0,o.yg)("p",null,"\u4e0e ",(0,o.yg)("inlineCode",{parentName:"p"},"useState")," \u7c7b\u4f3c\uff0c",(0,o.yg)("inlineCode",{parentName:"p"},"useReducer")," \u4e5f\u4e0e Immer \u5de7\u5999\u7ed3\u5408\uff0c\u5982 ",(0,o.yg)("a",{parentName:"p",href:"https://codesandbox.io/s/immer-usereducer-bqpzn?file=/src/index.js:0-1018"},"CodeSandbox")," \u6240\u793a\uff1a"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},'import React, {useCallback, useReducer} from "react"\nimport {produce} from "immer"\n\nconst TodoList = () => {\n    const [todos, dispatch] = useReducer(\n        produce((draft, action) => {\n            switch (action.type) {\n                case "toggle":\n                    const todo = draft.find(todo => todo.id === action.id)\n                    todo.done = !todo.done\n                    break\n                case "add":\n                    draft.push({\n                        id: action.id,\n                        title: "A new todo",\n                        done: false\n                    })\n                    break\n                default:\n                    break\n            }\n        }),\n        [\n            /* initial todos */\n        ]\n    )\n\n    const handleToggle = useCallback(id => {\n        dispatch({\n            type: "toggle",\n            id\n        })\n    }, [])\n\n    const handleAdd = useCallback(() => {\n        dispatch({\n            type: "add",\n            id: "todo_" + Math.random()\n        })\n    }, [])\n\n    // etc\n}\n')),(0,o.yg)("h2",{id:"useimmerreducer"},"useImmerReducer"),(0,o.yg)("p",null,"\u540c\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 ",(0,o.yg)("inlineCode",{parentName:"p"},"use-immer")," \u5305\u4e2d\u7684 ",(0,o.yg)("inlineCode",{parentName:"p"},"useImmerReducer")," \u7b80\u5316 (",(0,o.yg)("a",{parentName:"p",href:"https://codesandbox.io/s/useimmerreducer-sycpb?file=/src/index.js"},"demo"),")"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},'import React, { useCallback } from "react";\nimport { useImmerReducer } from "use-immer";\n\nconst TodoList = () => {\n  const [todos, dispatch] = useImmerReducer(\n    (draft, action) => {\n      switch (action.type) {\n        case "toggle":\n          const todo = draft.find((todo) => todo.id === action.id);\n          todo.done = !todo.done;\n          break;\n        case "add":\n          draft.push({\n            id: action.id,\n            title: "A new todo",\n            done: false\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [ /* initial todos */ ]\n  );\n\n  //etc\n\n')),(0,o.yg)("h2",{id:"redux--immer"},"Redux + Immer"),(0,o.yg)("p",null,"Redux + Immer \u5728 ",(0,o.yg)("a",{parentName:"p",href:"https://redux-toolkit.js.org/usage/immer-reducers"},"Redux Toolkit")," \u7684\u6587\u6863\u4e2d\u88ab\u5e7f\u6cdb\u4ecb\u7ecd\u3002\u5bf9\u4e8e\u6ca1\u6709 Redux Toolkit \u7684 Redux\uff0c\u53ef\u4ee5\u5e94\u7528\u4e0e\u4e0a\u9762\u5e94\u7528\u4e8e ",(0,o.yg)("inlineCode",{parentName:"p"},"useReducer")," \u76f8\u540c\u7684\u6280\u5de7\uff1a\u4f7f\u7528 ",(0,o.yg)("inlineCode",{parentName:"p"},"produce")," \u5305\u88c5 reducer \u51fd\u6570\uff0c\u60a8\u53ef\u4ee5\u5b89\u5168\u5730\u4fee\u6539 draft\uff01"),(0,o.yg)("p",null,"\u4f8b\u5b50:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},'import {produce} from "immer"\n\n// \u521d\u59cb state\nconst INITIAL_STATE = [\n    /* \u4e00\u7cfb\u5217 todos */\n]\n\nconst todosReducer = produce((draft, action) => {\n    switch (action.type) {\n        case "toggle":\n            const todo = draft.find(todo => todo.id === action.id)\n            todo.done = !todo.done\n            break\n        case "add":\n            draft.push({\n                id: action.id,\n                title: "A new todo",\n                done: false\n            })\n            break\n        default:\n            break\n    }\n})\n')))}p.isMDXComponent=!0}}]);