"use strict";(self.webpackChunkimmer_website=self.webpackChunkimmer_website||[]).push([[283],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>g});var a=r(6540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):m(m({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=p(r),y=i,g=s["".concat(l,".").concat(y)]||s[y]||c[y]||n;return r?a.createElement(g,m(m({ref:t},u),{},{components:r})):a.createElement(g,m({ref:t},u))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,m=new Array(n);m[0]=y;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[s]="string"==typeof e?e:i,m[1]=o;for(var p=2;p<n;p++)m[p]=r[p];return a.createElement.apply(null,m)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},8491:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=r(8168),i=r(8587),n=(r(6540),r(5680)),m=["components"],o={id:"built-with",title:"Built with Immer"},l=void 0,p={unversionedId:"built-with",id:"built-with",title:"Built with Immer",description:"- react-copy-write Immutable state with a mutable API",source:"@site/docs/built-with.md",sourceDirName:".",slug:"/built-with",permalink:"/immer/built-with",draft:!1,editUrl:"https://github.com/immerjs/immer/edit/main/website/docs/built-with.md",tags:[],version:"current",frontMatter:{id:"built-with",title:"Built with Immer"},sidebar:"Immer",previous:{title:"Pitfalls",permalink:"/immer/pitfalls"},next:{title:"Supporting immer",permalink:"/immer/support"}},u={},s=[],c={toc:s};function y(e){var t=e.components,r=(0,i.A)(e,m);return(0,n.yg)("wrapper",(0,a.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("center",null,(0,n.yg)("div",{"data-ea-publisher":"immerjs","data-ea-type":"image",className:"horizontal bordered"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/aweary/react-copy-write"},"react-copy-write")," ",(0,n.yg)("em",{parentName:"li"},"Immutable state with a mutable API")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/reduxjs/redux-toolkit"},"redux-toolkit")," ",(0,n.yg)("em",{parentName:"li"},"The official, opinionated, batteries-included toolset for efficient Redux development")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://gist.github.com/kitze/fb65f527803a93fb2803ce79a792fff8"},"immer based handleActions")," ",(0,n.yg)("em",{parentName:"li"},"Boilerplate free actions for Redux")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/anish000kumar/redux-box"},"redux-box")," ",(0,n.yg)("em",{parentName:"li"},"Modular and easy-to-grasp redux based state management, with least boilerplate")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/jeffreyyoung/quick-redux"},"quick-redux")," ",(0,n.yg)("em",{parentName:"li"},"tools to make redux development quicker and easier")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/jamiebuilds/bey"},"bey")," ",(0,n.yg)("em",{parentName:"li"},"Simple immutable state for React using Immer")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/Maxvien/cool-store"},"cool-store")," ",(0,n.yg)("em",{parentName:"li"},"CoolStore is an immutable state store built on top of ImmerJS and RxJS")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/drcmda/immer-wieder#readme"},"immer-wieder")," ",(0,n.yg)("em",{parentName:"li"},"State management lib that combines React 16 Context and immer for Redux semantics")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/neurosnap/robodux"},"robodux")," ",(0,n.yg)("em",{parentName:"li"},"flexible way to reduce redux boilerplate")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/epeli/immer-reducer"},"immer-reducer")," ",(0,n.yg)("em",{parentName:"li"},"Type-safe and terse React (useReducer()) and Redux reducers with Typescript")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/knpwrs/redux-ts-utils"},"redux-ts-utils")," ",(0,n.yg)("em",{parentName:"li"},"Everything you need to create type-safe applications with Redux with a strong emphasis on simplicity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/suchipi/react-state-tree"},"react-state-tree")," ",(0,n.yg)("em",{parentName:"li"},"Drop-in replacement for useState that persists your state into a redux-like state tree")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/salvoravida/redux-immer"},"redux-immer")," ",(0,n.yg)("em",{parentName:"li"},"is used to create an equivalent function of Redux combineReducers that works with ",(0,n.yg)("inlineCode",{parentName:"em"},"immer")," state. Like ",(0,n.yg)("inlineCode",{parentName:"em"},"redux-immutable")," but for ",(0,n.yg)("inlineCode",{parentName:"em"},"immer"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/nilsmehlhorn/ngrx-wieder"},"ngrx-wieder")," ",(0,n.yg)("em",{parentName:"li"},"Lightweight yet configurable solution for implementing undo-redo in Angular apps on top of NgRx and Immer")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/sep2/immer-yjs"},"immer-yjs")," ",(0,n.yg)("em",{parentName:"li"},"Combine ",(0,n.yg)("inlineCode",{parentName:"em"},"immer")," with CRDT library ",(0,n.yg)("inlineCode",{parentName:"em"},"y.js")," for easy json data manipulation")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/webstudio-is/immerhin"},"immerhin")," Sync state with undo/redo"),(0,n.yg)("li",{parentName:"ul"},"... and ",(0,n.yg)("a",{parentName:"li",href:"https://www.npmjs.com/browse/depended/immer"},"many more"))))}y.isMDXComponent=!0}}]);